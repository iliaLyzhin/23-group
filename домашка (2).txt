Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub
Создан репозиторий в GitHub
Созданный репозиторий склонирован на локальный компьютер в отдельную папку.

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
1. Создайте текстоовый файл как в первом ДЗ по Terminal.
2. Сценарий перенесите в этот файл.
3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

4. Создать файл “new.json” - touch 
5. Добавить файл под гит. - git add .
6. Закоммитить файл. - git commit -m "new.js"
7. Отправить файл на внешний GitHub репозиторий. - git push
8. Создать файлы new2.json, new2.xml, new2.txt - touch new2.js new2.xml new2.txt
9. Добавить файлы под гит. - git add .
10. Закоммитить файлы. - git commit "new2.js new2.xml new2.txt"
11. Отправить файлы на внешний GitHub репозиторий. - git push
12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). - vim new2.txt (и пишем полотно) )
13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vim new2.js (и пишем полотно) )
14. Добавить и закоммитить “new2.txt” одной строчкой. - git add new2.txt && git commit -m "comment"
15. Добавить и закоммитить “new2.json” одной строчкой. - git add new2.js && git commit -m "comment"
16. Отправить изменения на внешний репозиторий. - git push
17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. - vim new2.xml
18. Добавить и закоммитить “new2.xml” одной строчкой. - git add new2.xml && git commit -m "comment"
19. Отправить изменения на внешний репозиторий. - git push
20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий. - git add домашка (1).txt && git commit -m "comment"   , git hush
21. В веб интерфейсе GitHub создать файл new3.txt. - создал)
22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). - написал)
23. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сделал
24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория) - git clone (вставляем shh ключ) потом пишем git pull
25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON. - дописал
26. Сделать Commit changes (сохранить) изменения на веб интерфейсе.- сделал)
27. Синхронизировать внешний и локальный репозитории - git clone (вставляем shh ключ) потом пишем git pull
28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML. - отредактировал
29. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - сохранил
30. Синхронизировать внешний и локальный репозитории - git clone (вставляем shh ключ) потом пишем git pull

Данные для заполнения и редактирования файлов можете использовать любые, не обязательно свои.
